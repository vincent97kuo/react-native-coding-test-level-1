{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Header from \"../../components/elements/Header\";\nimport Colors from \"../../constants/Colors\";\nimport Layout from \"../../constants/Layout\";\nimport TextField2 from \"../../components/elements/TextField2\";\nimport Label from \"../../components/elements/Label\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport moment from 'moment';\nimport { MaterialCommunityIcons, Feather } from \"@expo/vector-icons\";\nimport CustomButton from \"../../components/elements/CustomButton\";\nimport H3 from \"../../components/elements/H3\";\nimport H1 from \"../../components/elements/H1\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ContactUsScreen = function (_Component) {\n  _inherits(ContactUsScreen, _Component);\n\n  var _super = _createSuper(ContactUsScreen);\n\n  function ContactUsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ContactUsScreen);\n\n    _this = _super.call(this, props);\n\n    _this.setModalVisible = function (visible) {\n      _this.setState({\n        modalVisible: visible\n      });\n    };\n\n    _this.state = {\n      name: '',\n      email: '',\n      dob: new Date(),\n      modalVisible: false,\n      setDatePickerVisibility: false\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.showMode = _this.showMode.bind(_assertThisInitialized(_this));\n    _this.displayDatepicker = _this.displayDatepicker.bind(_assertThisInitialized(_this));\n    _this.changeSelectedDate = _this.changeSelectedDate.bind(_assertThisInitialized(_this));\n    _this.selectDate = _this.selectDate.bind(_assertThisInitialized(_this));\n    _this.showDatePicker = _this.showDatePicker.bind(_assertThisInitialized(_this));\n    _this.hideDatePicker = _this.hideDatePicker.bind(_assertThisInitialized(_this));\n    _this.handleConfirm = _this.handleConfirm.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ContactUsScreen, [{\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      var _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email;\n\n      if (name === '') {\n        Alert.alert('Please input name!');\n        return;\n      }\n\n      var stringOnly = name.replace(/[^a-z]/gi, '');\n      this.setState({\n        name: stringOnly\n      });\n      var reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\n\n      if (reg.test(email) === false) {\n        Alert.alert(\"Please enter a valid email!\");\n        return;\n      }\n\n      this.setModalVisible(true);\n    }\n  }, {\n    key: \"selectDate\",\n    value: function selectDate(event, date) {\n      this.setState({\n        dob: date\n      });\n    }\n  }, {\n    key: \"showMode\",\n    value: function showMode(currentMode) {\n      this.setState({\n        setShow: true\n      });\n      this.setState({\n        setMode: currentMode\n      });\n    }\n  }, {\n    key: \"displayDatepicker\",\n    value: function displayDatepicker() {\n      this.showMode(\"date\");\n    }\n  }, {\n    key: \"changeSelectedDate\",\n    value: function changeSelectedDate(event, selectedDate) {\n      var currentDate = selectedDate || this.state.dob;\n      this.setState({\n        dob: currentDate\n      });\n    }\n  }, {\n    key: \"showDatePicker\",\n    value: function showDatePicker() {\n      this.setState({\n        setDatePickerVisibility: true\n      });\n    }\n  }, {\n    key: \"hideDatePicker\",\n    value: function hideDatePicker() {\n      this.setState({\n        setDatePickerVisibility: false\n      });\n    }\n  }, {\n    key: \"handleConfirm\",\n    value: function handleConfirm(date) {\n      console.log(\"A date has been picked: \", date);\n      this.setState({\n        dob: moment(date).format(\"YYYY-MM-DD\")\n      });\n      console.log(\"The date: \", this.state.dob);\n      this.hideDatePicker();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          modalVisible = _this$state2.modalVisible,\n          name = _this$state2.name,\n          email = _this$state2.email,\n          dob = _this$state2.dob;\n      return _jsxs(View, {\n        style: {\n          paddingTop: 50,\n          backgroundColor: Colors.black,\n          height: Layout.window.height\n        },\n        children: [_jsx(Header, {\n          iconColor: \"white\",\n          navigation: this.props.navigation,\n          color: 'white',\n          title: \"Contact Us\"\n        }), _jsxs(View, {\n          style: {\n            marginTop: 10,\n            marginBottom: 10,\n            padding: 10\n          },\n          children: [_jsx(Label, {\n            style: {\n              color: Colors.white\n            },\n            children: \"Name\"\n          }), _jsx(TextField2, {\n            placeholder: \"Please enter your name\",\n            value: this.state.name,\n            onChangeText: function onChangeText(name) {\n              return _this2.setState({\n                name: name\n              });\n            }\n          })]\n        }), _jsxs(View, {\n          style: {\n            marginTop: 10,\n            marginBottom: 10,\n            padding: 10\n          },\n          children: [_jsx(Label, {\n            style: {\n              color: Colors.white\n            },\n            children: \"Email Address\"\n          }), _jsx(TextField2, {\n            placeholder: \"Please enter your email address\",\n            value: this.state.email,\n            onChangeText: function onChangeText(email) {\n              return _this2.setState({\n                email: email\n              });\n            }\n          })]\n        }), _jsxs(View, {\n          style: {\n            marginTop: 10,\n            marginBottom: 10,\n            padding: 10\n          },\n          children: [_jsx(Label, {\n            style: {\n              color: Colors.white\n            },\n            children: \"Date of Birth\"\n          }), _jsx(DateTimePickerModal, {\n            isVisible: this.state.setDatePickerVisibility,\n            mode: \"date\",\n            onConfirm: this.handleConfirm,\n            onCancel: this.hideDatePicker,\n            maximumDate: new Date(),\n            isDarkModeEnabled: true\n          }), this.state.dob && _jsx(TextField2, {\n            placeholder: \"Date of Birth\",\n            readonly: true,\n            value: this.state.dob,\n            onChangeText: function onChangeText(dob) {\n              return _this2.setState({\n                dob: dob\n              });\n            },\n            rightIcon: _jsx(View, {\n              style: {\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                width: 40,\n                paddingTop: 2,\n                position: \"absolute\",\n                right: 0\n              },\n              children: _jsx(TouchableOpacity, {\n                onPress: this.showDatePicker,\n                children: _jsx(MaterialCommunityIcons, {\n                  name: this.state.dob ? \"calendar-month\" : \"calendar-month-outline\",\n                  color: Colors.primaryHint,\n                  size: 23\n                })\n              })\n            })\n          })]\n        }), _jsx(View, {\n          style: {\n            padding: 10,\n            shadowColor: \"black\",\n            shadowOffset: {\n              width: 0,\n              height: 5\n            },\n            shadowOpacity: 0.4,\n            shadowRadius: 9\n          },\n          children: _jsx(CustomButton, {\n            fontSize: 16,\n            color: Colors.primaryColor,\n            style: {\n              marginTop: 20,\n              backgroundColor: Colors.primaryDark,\n              borderWidth: 0,\n              borderRadius: 15\n            },\n            onPress: function onPress() {\n              _this2.onSubmit();\n            },\n            children: \"Submit\"\n          })\n        }), _jsx(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: modalVisible,\n          onRequestClose: function onRequestClose() {\n            _this2.setModalVisible(!modalVisible);\n          },\n          children: _jsxs(View, {\n            style: styles.centeredView,\n            children: [_jsxs(View, {\n              style: styles.modalView,\n              children: [_jsxs(View, {\n                style: {\n                  paddingBottom: 20\n                },\n                children: [_jsx(H3, {\n                  color: 'rgb(242,210,152)',\n                  style: {\n                    paddingBottom: 20,\n                    textAlign: 'center'\n                  },\n                  children: \"Overview\"\n                }), _jsx(Text, {\n                  style: {\n                    color: 'white'\n                  },\n                  children: \"Name:\"\n                }), _jsx(Text, {\n                  style: {\n                    color: Colors.primaryColor,\n                    borderWidth: 0.2,\n                    borderColor: Colors.white,\n                    paddingTop: 5,\n                    paddingBottom: 5,\n                    paddingLeft: 80,\n                    paddingRight: 80,\n                    textAlign: 'center',\n                    minWidth: '100%'\n                  },\n                  children: name\n                })]\n              }), _jsxs(View, {\n                style: {\n                  paddingBottom: 20\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    color: 'white'\n                  },\n                  children: \"Email:\"\n                }), _jsx(Text, {\n                  style: {\n                    color: Colors.primaryColor,\n                    borderWidth: 0.2,\n                    borderColor: Colors.white,\n                    paddingTop: 5,\n                    paddingBottom: 5,\n                    paddingLeft: 80,\n                    paddingRight: 80,\n                    textAlign: 'center',\n                    minWidth: '100%'\n                  },\n                  children: email\n                })]\n              }), _jsxs(View, {\n                style: {\n                  paddingBottom: 20\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    color: 'white'\n                  },\n                  children: \"Date of Birth:\"\n                }), _jsx(Text, {\n                  style: {\n                    color: Colors.primaryColor,\n                    borderWidth: 0.2,\n                    borderColor: Colors.white,\n                    paddingTop: 5,\n                    paddingBottom: 5,\n                    paddingLeft: 80,\n                    paddingRight: 80,\n                    textAlign: 'center',\n                    minWidth: '100%'\n                  },\n                  children: dob\n                })]\n              })]\n            }), _jsx(Pressable, {\n              style: {\n                paddingTop: 15\n              },\n              onPress: function onPress() {\n                _this2.setModalVisible(!modalVisible);\n\n                clearInterval(_this2.timer);\n              },\n              children: _jsx(Feather, {\n                name: \"x-circle\",\n                style: styles.featherIcon,\n                size: Layout.platform === 'ios' ? 32 : 29,\n                color: Colors.gray\n              })\n            })]\n          })\n        })]\n      });\n    }\n  }]);\n\n  return ContactUsScreen;\n}(Component);\n\nContactUsScreen.propTypes = {};\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(89,89,89, 0.8)\"\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"rgb(27,27,29)\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    borderColor: 'rgb(242,210,152)',\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  featherIcon: {\n    fontWeight: \"10\"\n  }\n});\nexport default ContactUsScreen;","map":{"version":3,"names":["React","Component","Header","Colors","Layout","TextField2","Label","DateTimePickerModal","moment","MaterialCommunityIcons","Feather","CustomButton","H3","H1","ContactUsScreen","props","setModalVisible","visible","setState","modalVisible","state","name","email","dob","Date","setDatePickerVisibility","onSubmit","bind","showMode","displayDatepicker","changeSelectedDate","selectDate","showDatePicker","hideDatePicker","handleConfirm","Alert","alert","stringOnly","replace","reg","test","event","date","currentMode","setShow","setMode","selectedDate","currentDate","console","log","format","paddingTop","backgroundColor","black","height","window","navigation","marginTop","marginBottom","padding","color","white","alignItems","justifyContent","width","position","right","primaryHint","shadowColor","shadowOffset","shadowOpacity","shadowRadius","primaryColor","primaryDark","borderWidth","borderRadius","styles","centeredView","modalView","paddingBottom","textAlign","borderColor","paddingLeft","paddingRight","minWidth","clearInterval","timer","featherIcon","platform","gray","propTypes","StyleSheet","create","flex","margin","elevation","button","buttonOpen","buttonClose","textStyle","fontWeight","modalText"],"sources":["/Users/vincent/Documents/Assessment/react-native-coding-test-level-1/src/screens/ContactUs/ContactUsScreen.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity, Pressable, Modal, Alert, } from 'react-native';\nimport Header from '../../components/elements/Header';\nimport Colors from '../../constants/Colors';\nimport Layout from '../../constants/Layout';\nimport TextField2 from '../../components/elements/TextField2';\nimport Label from '../../components/elements/Label';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport moment from 'moment';\nimport { MaterialCommunityIcons, Feather } from \"@expo/vector-icons\";\nimport CustomButton from '../../components/elements/CustomButton';\nimport H3 from '../../components/elements/H3';\nimport H1 from '../../components/elements/H1';\n\nclass ContactUsScreen extends Component{\n    static propTypes = {};\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            dob: new Date(),\n\n            modalVisible: false,\n            setDatePickerVisibility: false,\n        };\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.showMode = this.showMode.bind(this);\n        this.displayDatepicker = this.displayDatepicker.bind(this);\n        this.changeSelectedDate = this.changeSelectedDate.bind(this);\n        this.selectDate = this.selectDate.bind(this);\n        this.showDatePicker = this.showDatePicker.bind(this);\n        this.hideDatePicker = this.hideDatePicker.bind(this);\n        this.handleConfirm = this.handleConfirm.bind(this);\n    }\n\n    onSubmit() {\n        const { name, email } = this.state;\n\n        if (name === '') {\n            Alert.alert('Please input name!');\n            return;\n        }\n\n        let stringOnly = name.replace(/[^a-z]/gi, '');\n        this.setState({ name: stringOnly })\n\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\n        if (reg.test(email) === false) {\n            Alert.alert(\"Please enter a valid email!\");\n            return;\n        }\n\n\n        this.setModalVisible(true)\n    }\n\n    selectDate(event, date) {\n        this.setState({\n          dob: date,\n        });\n    }\n\n    showMode(currentMode) {\n        this.setState({ setShow: true });\n        this.setState({ setMode: currentMode });\n    }\n\n    displayDatepicker() {\n        this.showMode(\"date\");\n    }\n\n    changeSelectedDate(event, selectedDate) {\n        const currentDate = selectedDate || this.state.dob;\n\n        this.setState({ dob: currentDate });\n    }\n\n    showDatePicker() {\n        this.setState({ setDatePickerVisibility: true });\n    }\n\n    hideDatePicker() {\n        this.setState({ setDatePickerVisibility: false });\n    }\n\n    handleConfirm(date) {\n        console.log(\"A date has been picked: \", date);\n        this.setState({\n        //   dob: CommonFunctions.formatDate(date, \"YYYY-MM-DD\"),\n          dob: moment(date).format(\"YYYY-MM-DD\")\n        });\n        console.log(\"The date: \", this.state.dob);\n        this.hideDatePicker();\n    }\n\n    setModalVisible = (visible) => {\n        this.setState({ modalVisible: visible });\n    }\n\n    render() {\n        const { modalVisible, name, email, dob } = this.state;\n\n        return (\n            <View\n                style={{\n                    paddingTop: 50,\n                    backgroundColor: Colors.black,\n                    height: Layout.window.height\n                }}\n            >\n                <Header\n                    iconColor={\"white\"}\n                    navigation={this.props.navigation}\n                    color={'white'}\n                    title=\"Contact Us\"\n                />\n                <View style={{ marginTop: 10, marginBottom: 10 , padding: 10 }}>\n                  <Label\n                    style={{\n                      color: Colors.white,\n                    }}\n                  >\n                    Name\n                  </Label>\n                  <TextField2\n                    placeholder=\"Please enter your name\"\n                    value={this.state.name}\n                    onChangeText={(name) => this.setState({ name })}\n                  />\n                </View>\n                <View style={{ marginTop: 10, marginBottom: 10 , padding: 10 }}>\n                  <Label\n                    style={{\n                      color: Colors.white,\n                    }}\n                  >\n                    Email Address\n                  </Label>\n                  <TextField2\n                    placeholder=\"Please enter your email address\"\n                    value={this.state.email}\n                    onChangeText={(email) => this.setState({ email })}\n                  />\n                </View>\n                <View style={{ marginTop: 10, marginBottom: 10 , padding: 10 }}>\n                    <Label\n                        style={{\n                        color: Colors.white,\n                        }}\n                    >\n                    Date of Birth\n                  </Label>\n                  <DateTimePickerModal\n                    isVisible={this.state.setDatePickerVisibility}\n                    mode=\"date\"\n                    onConfirm={this.handleConfirm}\n                    onCancel={this.hideDatePicker}\n                    maximumDate={new Date()}\n                    isDarkModeEnabled\n                  />\n                  {this.state.dob && (\n                    <TextField2\n                      placeholder=\"Date of Birth\"\n                      readonly\n                      value={this.state.dob}\n                      onChangeText={(dob) => this.setState({ dob })}\n                      rightIcon={\n                        <View\n                          style={{\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            width: 40,\n                            paddingTop: 2,\n                            position: \"absolute\",\n                            right: 0,\n                          }}\n                        >\n                          <TouchableOpacity onPress={this.showDatePicker}>\n                            <MaterialCommunityIcons\n                              name={\n                                this.state.dob\n                                  ? \"calendar-month\"\n                                  : \"calendar-month-outline\"\n                              }\n                              color={Colors.primaryHint}\n                              size={23}\n                            />\n                          </TouchableOpacity>\n                        </View>\n                      }\n                    />\n                  )}\n                </View>\n                <View\n                    style={{\n                        padding: 10,\n                        // alignItems: 'center',\n                        shadowColor: \"black\",\n                        shadowOffset: {\n                            width: 0,\n                            height: 5\n                        },\n                        shadowOpacity: 0.4,\n                        shadowRadius: 9,\n                    }}\n                >\n                    <CustomButton\n                        fontSize={16}\n                        color={Colors.primaryColor}\n                        style={{\n                            marginTop: 20,\n                            backgroundColor: Colors.primaryDark,\n                            borderWidth: 0,\n                            borderRadius: 15,\n                        }}\n                        onPress={() => {\n                            this.onSubmit()\n                        }}\n                    >\n                        Submit\n                    </CustomButton>\n                </View>\n                <Modal\n                    animationType=\"slide\"\n                    transparent={true}\n                    visible={modalVisible}\n                    onRequestClose={() => {\n                        // Alert.alert(\"Modal has been closed.\");\n                        this.setModalVisible(!modalVisible);\n                    }}\n                >\n                    <View style={styles.centeredView}>\n                        <View style={styles.modalView}>\n                            <View style={{ paddingBottom: 20, }}>\n                                <H3 color={'rgb(242,210,152)'} style={{ paddingBottom: 20, textAlign: 'center' }}>Overview</H3>\n                                <Text\n                                    style={{\n                                        color: 'white'\n                                    }}\n                                >\n                                    Name:\n                                </Text>\n                                <Text     \n                                    style={{\n                                        color: Colors.primaryColor,\n                                        borderWidth: 0.2,\n                                        borderColor: Colors.white,\n                                        paddingTop: 5,\n                                        paddingBottom: 5,\n                                        paddingLeft: 80,\n                                        paddingRight: 80,\n                                        textAlign: 'center',\n                                        minWidth: '100%'\n                                    }}\n                                >\n                                    {name}\n                                </Text>\n                            </View>\n                            <View style={{ paddingBottom: 20 }}>\n                                <Text\n                                    style={{\n                                        color: 'white'\n                                    }}\n                                >\n                                    Email:\n                                </Text>\n                                <Text     \n                                    style={{\n                                        color: Colors.primaryColor,\n                                        borderWidth: 0.2,\n                                        borderColor: Colors.white,\n                                        paddingTop: 5,\n                                        paddingBottom: 5,\n                                        paddingLeft: 80,\n                                        paddingRight: 80,\n                                        textAlign: 'center',\n                                        minWidth: '100%'\n                                    }}\n                                >\n                                    {email}\n                                </Text>\n                            </View>\n                            <View style={{ paddingBottom: 20 }}>\n                                <Text\n                                    style={{\n                                        color: 'white'\n                                    }}\n                                >\n                                    Date of Birth:\n                                </Text>\n                                <Text     \n                                    style={{\n                                        color: Colors.primaryColor,\n                                        borderWidth: 0.2,\n                                        borderColor: Colors.white,\n                                        paddingTop: 5,\n                                        paddingBottom: 5,\n                                        paddingLeft: 80,\n                                        paddingRight: 80,\n                                        textAlign: 'center',\n                                        minWidth: '100%'\n                                    }}\n                                >\n                                    {dob}\n                                </Text>\n                            </View>\n                        </View>\n                        <Pressable\n                            // style={[styles.button, styles.buttonClose]}\n                            style={{ paddingTop: 15}}\n                            onPress={() => {\n                                this.setModalVisible(!modalVisible);\n                                clearInterval(this.timer);\n                            }}\n                        >\n                            {/* <Text style={styles.textStyle}>x</Text> */}\n                            <Feather name=\"x-circle\" style={styles.featherIcon} size={Layout.platform === 'ios' ? 32 : 29} color={Colors.gray} />\n                        </Pressable>\n                    </View>\n                </Modal>\n            </View>\n        );\n    }\n  }\n\n  const styles = StyleSheet.create({\n    centeredView: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    //   marginTop: 22,\n      backgroundColor: \"rgba(89,89,89, 0.8)\",\n    //   opacity: 0.1\n        // backgroundColor: \"transparent\",\n    },\n    modalView: {\n      margin: 20,\n      backgroundColor: \"rgb(27,27,29)\",\n      borderRadius: 20,\n      padding: 35,\n      alignItems: \"center\",\n      shadowColor: \"black\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 1,\n        shadowRadius: 4,\n      elevation: 5\n    },\n    button: {\n      borderRadius: 20,\n      borderColor: 'rgb(242,210,152)',\n      padding: 10,\n      elevation: 2\n    },\n    buttonOpen: {\n      backgroundColor: \"#F194FF\",\n    },\n    buttonClose: {\n      backgroundColor: \"#2196F3\",\n    },\n    textStyle: {\n      color: \"white\",\n      fontWeight: \"bold\",\n      textAlign: \"center\"\n    },\n    modalText: {\n      marginBottom: 15,\n      textAlign: \"center\"\n    },\n    featherIcon: {\n        fontWeight: \"10\"\n    }\n});\n\n  export default ContactUsScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}