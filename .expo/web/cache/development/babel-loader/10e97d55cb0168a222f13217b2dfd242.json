{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"react-native-elements\";\nimport Colors from \"../../constants/Colors\";\nimport H1 from \"../../components/elements/H1\";\nimport Label from \"../../components/elements/Label\";\nimport Layout from \"../../constants/Layout\";\nimport CustomButton from \"../../components/elements/CustomButton\";\nimport Hint from \"../../components/elements/Hint\";\nimport H3 from \"../../components/elements/H3\";\nimport H2 from \"../../components/elements/H2\";\nimport Header from \"../../components/elements/Header\";\nimport CatalogItem from \"./CatalogItem\";\nimport { getCatalog } from \"../../redux/actions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CatalogScreen = function (_Component) {\n  _inherits(CatalogScreen, _Component);\n\n  var _super = _createSuper(CatalogScreen);\n\n  function CatalogScreen(props) {\n    var _this;\n\n    _classCallCheck(this, CatalogScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    _this.getCatalogList = _this.getCatalogList.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CatalogScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getCatalogList(true);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {}\n  }, {\n    key: \"getCatalogList\",\n    value: function getCatalogList() {\n      var refresh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.props.dispatch(getCatalog(refresh));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: {\n          paddingTop: 50,\n          backgroundColor: Colors.black,\n          height: Layout.window.height\n        },\n        children: [_jsx(Header, {\n          iconColor: \"white\",\n          navigation: this.props.navigation,\n          color: 'white',\n          title: \"Catalog\"\n        }), _jsx(View, {\n          style: {\n            position: \"relative\",\n            flex: 1\n          },\n          children: _jsx(View, {\n            style: {\n              flex: 1,\n              height: \"100%\",\n              width: \"100%\",\n              position: \"absolute\",\n              top: Layout.window.height * 0.23 - 40,\n              zIndex: 10\n            }\n          })\n        })]\n      });\n    }\n  }]);\n\n  return CatalogScreen;\n}(Component);\n\nCatalogScreen.propTypes = {};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    list: state.catalog.list,\n    fetching: state.catalog.fetching\n  };\n};\n\nexport default connect(mapStateToProps)(CatalogScreen);","map":{"version":3,"names":["PropTypes","React","Component","connect","Button","Colors","H1","Label","Layout","CustomButton","Hint","H3","H2","Header","CatalogItem","getCatalog","CatalogScreen","props","state","getCatalogList","bind","refresh","dispatch","paddingTop","backgroundColor","black","height","window","navigation","position","flex","width","top","zIndex","propTypes","mapStateToProps","list","catalog","fetching"],"sources":["/Users/vincent/Documents/Assessment/react-native-coding-test-level-1/src/screens/Catalog/CatalogScreen.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport {\n  StatusBar,\n  View,\n  ScrollView,\n  TouchableWithoutFeedback,\n  Dimensions,\n  Image,\n  Keyboard,\n  TouchableOpacity,\n  Platform,\n  ImageBackground,\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"react-native-elements\";\nimport Colors from \"../../constants/Colors\";\nimport H1 from \"../../components/elements/H1\";\nimport Label from \"../../components/elements/Label\";\nimport Layout from \"../../constants/Layout\";\nimport CustomButton from \"../../components/elements/CustomButton\";\nimport Hint from \"../../components/elements/Hint\";\nimport H3 from \"../../components/elements/H3\";\nimport H2 from \"../../components/elements/H2\";\nimport Header from \"../../components/elements/Header\";\nimport CatalogItem from \"./CatalogItem\";\nimport { getCatalog } from \"../../redux/actions\";\n\nclass CatalogScreen extends Component {\n  static propTypes = {};\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n    this.getCatalogList = this.getCatalogList.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCatalogList(true);\n  }\n  componentWillUnmount() {}\n\n  componentDidUpdate() {\n  }\n\n  getCatalogList(refresh = false) {\n    this.props.dispatch(getCatalog(refresh));\n  }\n\n  render() {\n    return (\n      <View\n        style={{\n            paddingTop: 50,\n            backgroundColor: Colors.black,\n            height: Layout.window.height\n        }}\n      >\n        <Header\n            iconColor={\"white\"}\n            navigation={this.props.navigation}\n            color={'white'}\n            title=\"Catalog\"\n        />\n        <View style={{ position: \"relative\", flex: 1 }}>\n          <View\n            style={{\n              flex: 1,\n              height: \"100%\",\n              width: \"100%\",\n              position: \"absolute\",\n              top: Layout.window.height * 0.23 - 40,\n              zIndex: 10,\n            }}\n          >\n            {/* {\n                this.props.list.map((r) => (\n                    <TouchableOpacity\n                        onPress={() => {\n                            this.props.navigation.navigate(\"VoucherInfo\", {\n                            id: r.id,\n                            });\n                        }}\n                    >\n                        <CatalogItem navigation={this.props.navigation} data={r} />\n                    </TouchableOpacity>\n                ))\n            } */}\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  list: state.catalog.list,\n  fetching: state.catalog.fetching,\n});\n\nexport default connect(mapStateToProps)(CatalogScreen);\n"],"mappings":";;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;;AAaA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,OAAOC,MAAP;AACA,OAAOC,EAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,OAAOC,YAAP;AACA,OAAOC,IAAP;AACA,OAAOC,EAAP;AACA,OAAOC,EAAP;AACA,OAAOC,MAAP;AACA,OAAOC,WAAP;AACA,SAASC,UAAT;;;;IAEMC,a;;;;;EAEJ,uBAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB,0BAAMA,KAAN;IACA,MAAKC,KAAL,GAAa,EAAb;IAGA,MAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB;IALiB;EAMlB;;;;WAED,6BAAoB;MAClB,KAAKD,cAAL,CAAoB,IAApB;IACD;;;WACD,gCAAuB,CAAE;;;WAEzB,8BAAqB,CACpB;;;WAED,0BAAgC;MAAA,IAAjBE,OAAiB,uEAAP,KAAO;MAC9B,KAAKJ,KAAL,CAAWK,QAAX,CAAoBP,UAAU,CAACM,OAAD,CAA9B;IACD;;;WAED,kBAAS;MACP,OACE,MAAC,IAAD;QACE,KAAK,EAAE;UACHE,UAAU,EAAE,EADT;UAEHC,eAAe,EAAEnB,MAAM,CAACoB,KAFrB;UAGHC,MAAM,EAAElB,MAAM,CAACmB,MAAP,CAAcD;QAHnB,CADT;QAAA,WAOE,KAAC,MAAD;UACI,SAAS,EAAE,OADf;UAEI,UAAU,EAAE,KAAKT,KAAL,CAAWW,UAF3B;UAGI,KAAK,EAAE,OAHX;UAII,KAAK,EAAC;QAJV,EAPF,EAaE,KAAC,IAAD;UAAM,KAAK,EAAE;YAAEC,QAAQ,EAAE,UAAZ;YAAwBC,IAAI,EAAE;UAA9B,CAAb;UAAA,UACE,KAAC,IAAD;YACE,KAAK,EAAE;cACLA,IAAI,EAAE,CADD;cAELJ,MAAM,EAAE,MAFH;cAGLK,KAAK,EAAE,MAHF;cAILF,QAAQ,EAAE,UAJL;cAKLG,GAAG,EAAExB,MAAM,CAACmB,MAAP,CAAcD,MAAd,GAAuB,IAAvB,GAA8B,EAL9B;cAMLO,MAAM,EAAE;YANH;UADT;QADF,EAbF;MAAA,EADF;IA0CD;;;;EAjEyB/B,S;;AAAtBc,a,CACGkB,S,GAAY,E;;AAmErB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACjB,KAAD;EAAA,OAAY;IAClCkB,IAAI,EAAElB,KAAK,CAACmB,OAAN,CAAcD,IADc;IAElCE,QAAQ,EAAEpB,KAAK,CAACmB,OAAN,CAAcC;EAFU,CAAZ;AAAA,CAAxB;;AAKA,eAAenC,OAAO,CAACgC,eAAD,CAAP,CAAyBnB,aAAzB,CAAf"},"metadata":{},"sourceType":"module"}