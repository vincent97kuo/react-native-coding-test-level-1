{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Header from \"../../components/elements/Header\";\nimport Colors from \"../../constants/Colors\";\nimport Layout from \"../../constants/Layout\";\nimport TextField2 from \"../../components/elements/TextField2\";\nimport Label from \"../../components/elements/Label\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport moment from 'moment';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ContactUsScreen = function (_Component) {\n  _inherits(ContactUsScreen, _Component);\n\n  var _super = _createSuper(ContactUsScreen);\n\n  function ContactUsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ContactUsScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: '',\n      email: '',\n      dob: new Date(),\n      setDatePickerVisibility: false\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.showMode = _this.showMode.bind(_assertThisInitialized(_this));\n    _this.displayDatepicker = _this.displayDatepicker.bind(_assertThisInitialized(_this));\n    _this.changeSelectedDate = _this.changeSelectedDate.bind(_assertThisInitialized(_this));\n    _this.selectDate = _this.selectDate.bind(_assertThisInitialized(_this));\n    _this.showDatePicker = _this.showDatePicker.bind(_assertThisInitialized(_this));\n    _this.hideDatePicker = _this.hideDatePicker.bind(_assertThisInitialized(_this));\n    _this.handleConfirm = _this.handleConfirm.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ContactUsScreen, [{\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      this.setModalVisible(true);\n    }\n  }, {\n    key: \"showMode\",\n    value: function showMode(currentMode) {\n      this.setState({\n        setShow: true\n      });\n      this.setState({\n        setMode: currentMode\n      });\n    }\n  }, {\n    key: \"displayDatepicker\",\n    value: function displayDatepicker() {\n      this.showMode(\"date\");\n    }\n  }, {\n    key: \"changeSelectedDate\",\n    value: function changeSelectedDate(event, selectedDate) {\n      var currentDate = selectedDate || this.state.dob;\n      this.setState({\n        dob: currentDate\n      });\n    }\n  }, {\n    key: \"showDatePicker\",\n    value: function showDatePicker() {\n      this.setState({\n        setDatePickerVisibility: true\n      });\n    }\n  }, {\n    key: \"hideDatePicker\",\n    value: function hideDatePicker() {\n      this.setState({\n        setDatePickerVisibility: false\n      });\n    }\n  }, {\n    key: \"handleConfirm\",\n    value: function handleConfirm(date) {\n      console.log(\"A date has been picked: \", date);\n      this.setState({\n        dob: moment(date).format(\"YYYY-MM-DD\")\n      });\n      console.log(\"The date: \", this.state.dob);\n      this.hideDatePicker();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: {\n          paddingTop: 50,\n          backgroundColor: Colors.black,\n          height: Layout.window.height\n        },\n        children: [_jsx(Header, {\n          iconColor: \"white\",\n          navigation: this.props.navigation,\n          color: 'white',\n          title: \"Contact Us\"\n        }), _jsxs(View, {\n          style: {\n            marginTop: 30,\n            marginBottom: 100,\n            padding: 10\n          },\n          children: [_jsx(Label, {\n            style: {\n              color: Colors.white\n            },\n            children: \"Name\"\n          }), _jsx(TextField2, {\n            placeholder: \"Please enter your name\",\n            value: this.state.name,\n            onChangeText: function onChangeText(name) {\n              return _this2.setState({\n                name: name\n              });\n            }\n          })]\n        }), _jsxs(View, {\n          style: {\n            marginTop: 30,\n            marginBottom: 100,\n            padding: 10\n          },\n          children: [_jsx(Label, {\n            style: {\n              color: Colors.white\n            },\n            children: \"Email Address\"\n          }), _jsx(TextField2, {\n            placeholder: \"Please enter your email address\",\n            value: this.state.email,\n            onChangeText: function onChangeText(email) {\n              return _this2.setState({\n                email: email\n              });\n            }\n          })]\n        }), _jsxs(View, {\n          children: [_jsx(Label, {\n            style: {\n              color: Colors.getStarted\n            },\n            children: \"Date of Birth\"\n          }), _jsx(DateTimePickerModal, {\n            isVisible: this.state.setDatePickerVisibility,\n            mode: \"date\",\n            onConfirm: this.handleConfirm,\n            onCancel: this.hideDatePicker,\n            maximumDate: new Date()\n          }), this.state.dob && _jsx(TextField2, {\n            readonly: true,\n            value: this.state.dob,\n            onChangeText: function onChangeText(dob) {\n              return _this2.setState({\n                dob: dob\n              });\n            },\n            rightIcon: _jsx(View, {\n              style: {\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                width: 40,\n                paddingTop: 2,\n                position: \"absolute\",\n                right: 0\n              },\n              children: _jsx(TouchableOpacity, {\n                onPress: this.showDatePicker,\n                children: _jsx(MaterialCommunityIcons, {\n                  name: this.state.dob ? \"calendar-month\" : \"calendar-month-outline\",\n                  color: Colors.primaryHint,\n                  size: 23\n                })\n              })\n            })\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return ContactUsScreen;\n}(Component);\n\nContactUsScreen.propTypes = {};\nexport default ContactUsScreen;","map":{"version":3,"names":["React","Component","Header","Colors","Layout","TextField2","Label","DateTimePickerModal","moment","ContactUsScreen","props","state","name","email","dob","Date","setDatePickerVisibility","onSubmit","bind","showMode","displayDatepicker","changeSelectedDate","selectDate","showDatePicker","hideDatePicker","handleConfirm","setModalVisible","currentMode","setState","setShow","setMode","event","selectedDate","currentDate","date","console","log","format","paddingTop","backgroundColor","black","height","window","navigation","marginTop","marginBottom","padding","color","white","getStarted","alignItems","justifyContent","width","position","right","primaryHint","propTypes"],"sources":["/Users/vincent/Documents/Assessment/react-native-coding-test-level-1/src/screens/ContactUs/ContactUsScreen.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, View, Text, } from 'react-native';\nimport Header from '../../components/elements/Header';\nimport Colors from '../../constants/Colors';\nimport Layout from '../../constants/Layout';\nimport TextField2 from '../../components/elements/TextField2';\nimport Label from '../../components/elements/Label';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport moment from 'moment';\n\nclass ContactUsScreen extends Component{\n    static propTypes = {};\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            dob: new Date(),\n\n            setDatePickerVisibility: false,\n        };\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.showMode = this.showMode.bind(this);\n        this.displayDatepicker = this.displayDatepicker.bind(this);\n        this.changeSelectedDate = this.changeSelectedDate.bind(this);\n        this.selectDate = this.selectDate.bind(this);\n        this.showDatePicker = this.showDatePicker.bind(this);\n        this.hideDatePicker = this.hideDatePicker.bind(this);\n        this.handleConfirm = this.handleConfirm.bind(this);\n    }\n\n    onSubmit() {\n        this.setModalVisible(true)\n    }\n\n    showMode(currentMode) {\n        this.setState({ setShow: true });\n        this.setState({ setMode: currentMode });\n    }\n\n    displayDatepicker() {\n        this.showMode(\"date\");\n    }\n\n    changeSelectedDate(event, selectedDate) {\n        const currentDate = selectedDate || this.state.dob;\n\n        this.setState({ dob: currentDate });\n    }\n\n    showDatePicker() {\n        this.setState({ setDatePickerVisibility: true });\n    }\n\n    hideDatePicker() {\n        this.setState({ setDatePickerVisibility: false });\n    }\n\n    handleConfirm(date) {\n        console.log(\"A date has been picked: \", date);\n        this.setState({\n        //   dob: CommonFunctions.formatDate(date, \"YYYY-MM-DD\"),\n          dob: moment(date).format(\"YYYY-MM-DD\")\n        });\n        console.log(\"The date: \", this.state.dob);\n        this.hideDatePicker();\n    }\n\n    render() {\n        return (\n            <View\n                style={{\n                    paddingTop: 50,\n                    backgroundColor: Colors.black,\n                    height: Layout.window.height\n                }}\n            >\n                <Header\n                    iconColor={\"white\"}\n                    navigation={this.props.navigation}\n                    color={'white'}\n                    title=\"Contact Us\"\n                />\n                <View style={{ marginTop: 30, marginBottom: 100 , padding: 10 }}>\n                  <Label\n                    style={{\n                      color: Colors.white,\n                    }}\n                  >\n                    Name\n                  </Label>\n                  <TextField2\n                    placeholder=\"Please enter your name\"\n                    value={this.state.name}\n                    onChangeText={(name) => this.setState({ name })}\n                  />\n                </View>\n                <View style={{ marginTop: 30, marginBottom: 100 , padding: 10 }}>\n                  <Label\n                    style={{\n                      color: Colors.white,\n                    }}\n                  >\n                    Email Address\n                  </Label>\n                  <TextField2\n                    placeholder=\"Please enter your email address\"\n                    value={this.state.email}\n                    onChangeText={(email) => this.setState({ email })}\n                  />\n                </View>\n                <View>\n                  <Label\n                    style={{\n                      color: Colors.getStarted,\n                    }}\n                  >\n                    Date of Birth\n                  </Label>\n                  <DateTimePickerModal\n                    isVisible={this.state.setDatePickerVisibility}\n                    mode=\"date\"\n                    onConfirm={this.handleConfirm}\n                    onCancel={this.hideDatePicker}\n                    maximumDate={new Date()}\n                  />\n                  {this.state.dob && (\n                    <TextField2\n                      // placeholder=\"Full Name (as per NRIC)\"\n                      readonly\n                      value={this.state.dob}\n                      onChangeText={(dob) => this.setState({ dob })}\n                      rightIcon={\n                        <View\n                          style={{\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            width: 40,\n                            paddingTop: 2,\n                            position: \"absolute\",\n                            right: 0,\n                          }}\n                        >\n                          <TouchableOpacity onPress={this.showDatePicker}>\n                            <MaterialCommunityIcons\n                              name={\n                                this.state.dob\n                                  ? \"calendar-month\"\n                                  : \"calendar-month-outline\"\n                              }\n                              color={Colors.primaryHint}\n                              size={23}\n                            />\n                          </TouchableOpacity>\n                        </View>\n                      }\n                    />\n                  )}\n                </View>\n            </View>\n        );\n    }\n  }\n  export default ContactUsScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}